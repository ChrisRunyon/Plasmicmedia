THREE.MTLLoader=function(baseUrl,options,crossOrigin){this.baseUrl=baseUrl,this.options=options,this.crossOrigin=crossOrigin},THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(url,onLoad,onProgress,onError){var scope=this,loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){onLoad(scope.parse(text))},onProgress,onError)},parse:function(text){for(var lines=text.split("\n"),info={},delimiter_pattern=/\s+/,materialsInfo={},i=0;i<lines.length;i++){var line=lines[i];if(line=line.trim(),0!==line.length&&"#"!==line.charAt(0)){var pos=line.indexOf(" "),key=pos>=0?line.substring(0,pos):line;key=key.toLowerCase();var value=pos>=0?line.substring(pos+1):"";if(value=value.trim(),"newmtl"===key)info={name:value},materialsInfo[value]=info;else if(info)if("ka"===key||"kd"===key||"ks"===key){var ss=value.split(delimiter_pattern,3);info[key]=[parseFloat(ss[0]),parseFloat(ss[1]),parseFloat(ss[2])]}else info[key]=value}}var materialCreator=new THREE.MTLLoader.MaterialCreator(this.baseUrl,this.options);return materialCreator.crossOrigin=this.crossOrigin,materialCreator.setMaterials(materialsInfo),materialCreator}},THREE.MTLLoader.MaterialCreator=function(baseUrl,options){this.baseUrl=baseUrl,this.options=options,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setMaterials:function(materialsInfo){this.materialsInfo=this.convert(materialsInfo),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(materialsInfo){if(!this.options)return materialsInfo;var converted={};for(var mn in materialsInfo){var mat=materialsInfo[mn],covmat={};converted[mn]=covmat;for(var prop in mat){var save=!0,value=mat[prop],lprop=prop.toLowerCase();switch(lprop){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(value=[value[0]/255,value[1]/255,value[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===value[0]&&0===value[1]&&0===value[1]&&(save=!1);break;case"d":this.options&&this.options.invertTransparency&&(value=1-value)}save&&(covmat[lprop]=value)}}return converted},preload:function(){for(var mn in this.materialsInfo)this.create(mn)},getIndex:function(materialName){return this.nameLookup[materialName]},getAsArray:function(){var index=0;for(var mn in this.materialsInfo)this.materialsArray[index]=this.create(mn),this.nameLookup[mn]=index,index++;return this.materialsArray},create:function(materialName){return void 0===this.materials[materialName]&&this.createMaterial_(materialName),this.materials[materialName]},createMaterial_:function(materialName){var mat=this.materialsInfo[materialName],params={name:materialName,side:this.side};for(var prop in mat){var value=mat[prop];switch(prop.toLowerCase()){case"kd":params.diffuse=(new THREE.Color).fromArray(value);break;case"ka":break;case"ks":params.specular=(new THREE.Color).fromArray(value);break;case"map_kd":params.map=this.loadTexture(this.baseUrl+value),params.map.wrapS=this.wrap,params.map.wrapT=this.wrap;break;case"ns":params.shininess=value;break;case"d":1>value&&(params.transparent=!0,params.opacity=value);break;case"map_bump":case"bump":if(params.bumpMap)break;params.bumpMap=this.loadTexture(this.baseUrl+value),params.bumpMap.wrapS=this.wrap,params.bumpMap.wrapT=this.wrap}}return params.diffuse&&(params.color=params.diffuse),this.materials[materialName]=new THREE.MeshPhongMaterial(params),this.materials[materialName]},loadTexture:function(url,mapping,onLoad,onError){var texture,loader=THREE.Loader.Handlers.get(url);return null!==loader?texture=loader.load(url,onLoad):(texture=new THREE.Texture,loader=new THREE.ImageLoader,loader.crossOrigin=this.crossOrigin,loader.load(url,function(image){texture.image=THREE.MTLLoader.ensurePowerOfTwo_(image),texture.needsUpdate=!0,onLoad&&onLoad(texture)})),void 0!==mapping&&(texture.mapping=mapping),texture}},THREE.MTLLoader.ensurePowerOfTwo_=function(image){if(!THREE.Math.isPowerOfTwo(image.width)||!THREE.Math.isPowerOfTwo(image.height)){var canvas=document.createElement("canvas");canvas.width=THREE.MTLLoader.nextHighestPowerOfTwo_(image.width),canvas.height=THREE.MTLLoader.nextHighestPowerOfTwo_(image.height);var ctx=canvas.getContext("2d");return ctx.drawImage(image,0,0,image.width,image.height,0,0,canvas.width,canvas.height),canvas}return image},THREE.MTLLoader.nextHighestPowerOfTwo_=function(x){--x;for(var i=1;32>i;i<<=1)x|=x>>i;return x+1},THREE.EventDispatcher.prototype.apply(THREE.MTLLoader.prototype);