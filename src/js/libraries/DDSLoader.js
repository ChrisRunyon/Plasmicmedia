THREE.DDSLoader=function(){this._parser=THREE.DDSLoader.parse},THREE.DDSLoader.prototype=Object.create(THREE.CompressedTextureLoader.prototype),THREE.DDSLoader.prototype.constructor=THREE.DDSLoader,THREE.DDSLoader.parse=function(buffer,loadMipmaps){function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function int32ToFourCC(value){return String.fromCharCode(255&value,value>>8&255,value>>16&255,value>>24&255)}function loadARGBMip(buffer,dataOffset,width,height){for(var dataLength=width*height*4,srcBuffer=new Uint8Array(buffer,dataOffset,dataLength),byteArray=new Uint8Array(dataLength),dst=0,src=0,y=0;height>y;y++)for(var x=0;width>x;x++){var b=srcBuffer[src];src++;var g=srcBuffer[src];src++;var r=srcBuffer[src];src++;var a=srcBuffer[src];src++,byteArray[dst]=r,dst++,byteArray[dst]=g,dst++,byteArray[dst]=b,dst++,byteArray[dst]=a,dst++}return byteArray}var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},DDS_MAGIC=542327876,DDSD_MIPMAPCOUNT=131072,DDSCAPS2_CUBEMAP=512,DDPF_FOURCC=4,FOURCC_DXT1=fourCCToInt32("DXT1"),FOURCC_DXT3=fourCCToInt32("DXT3"),FOURCC_DXT5=fourCCToInt32("DXT5"),headerLengthInt=31,off_magic=0,off_size=1,off_flags=2,off_height=3,off_width=4,off_mipmapCount=7,off_pfFlags=20,off_pfFourCC=21,off_RGBBitCount=22,off_RBitMask=23,off_GBitMask=24,off_BBitMask=25,off_ABitMask=26,off_caps2=28,header=new Int32Array(buffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC)return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),dds;if(!header[off_pfFlags]&DDPF_FOURCC)return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),dds;var blockBytes,fourCC=header[off_pfFourCC],isRGBAUncompressed=!1;switch(fourCC){case FOURCC_DXT1:blockBytes=8,dds.format=THREE.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==header[off_RGBBitCount]&&16711680&header[off_RBitMask]&&65280&header[off_GBitMask]&&255&header[off_BBitMask]&&4278190080&header[off_ABitMask]))return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",int32ToFourCC(fourCC)),dds;isRGBAUncompressed=!0,blockBytes=64,dds.format=THREE.RGBAFormat}dds.mipmapCount=1,header[off_flags]&DDSD_MIPMAPCOUNT&&loadMipmaps!==!1&&(dds.mipmapCount=Math.max(1,header[off_mipmapCount])),dds.isCubemap=header[off_caps2]&DDSCAPS2_CUBEMAP?!0:!1,dds.width=header[off_width],dds.height=header[off_height];for(var dataOffset=header[off_size]+4,width=dds.width,height=dds.height,faces=dds.isCubemap?6:1,face=0;faces>face;face++){for(var i=0;i<dds.mipmapCount;i++){if(isRGBAUncompressed)var byteArray=loadARGBMip(buffer,dataOffset,width,height),dataLength=byteArray.length;else var dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes,byteArray=new Uint8Array(buffer,dataOffset,dataLength);var mipmap={data:byteArray,width:width,height:height};dds.mipmaps.push(mipmap),dataOffset+=dataLength,width=Math.max(.5*width,1),height=Math.max(.5*height,1)}width=dds.width,height=dds.height}return dds};